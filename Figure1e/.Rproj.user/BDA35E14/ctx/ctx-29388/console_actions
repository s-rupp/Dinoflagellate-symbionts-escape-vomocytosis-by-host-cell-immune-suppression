{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3
    ],
    "data": [
        "\nR version 4.0.3 (2020-10-10) -- \"Bunny-Wunnies Freak Out\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(readxl)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(mgcv)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggsignif)",
        "> ",
        "library(readr)",
        "> ",
        "library(emmeans)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "dat <- data.frame(read_csv(\"1d+e_data.csv\"))",
        "> ",
        "head(dat)",
        "> ",
        "dat$Algae <- factor(dat$Algae, levels= c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"))",
        "> ",
        "dat$Well_ID <- factor(dat$Well_ID)",
        "> ",
        "dat$Repeat.Date. <- factor(as.character(dat$Repeat.Date.))",
        "> ",
        "dat$infected <- ifelse(dat$Number.of.Symbionts>=1,1,0)",
        "> ",
        "head(dat)",
        "> ",
        "#model data",
        "> ",
        "mod <- gam(Number.of.Symbionts ~ Algae + Time_post_infection + s(Well_ID, bs=\"re\"),data=dat,family=nb())",
        "> ",
        "S <- summary(mod)$p.table",
        "> ",
        "S",
        "                      Estimate Std. Error    z value     Pr(>|z|)\n(Intercept)          2.0980560 0.24996393   8.393435 4.721399e-17\nAlgaeM. gaditana    -1.7207271 0.29066086  -5.920051 3.218415e-09\nAlgaeN. oculata     -3.7639682 0.31305280 -12.023429 2.676293e-33\nAlgaeC. velia       -1.3621264 0.28664191  -4.752014 2.014004e-06\nTime_post_infection -0.1919328 0.03333966  -5.756891 8.567718e-09\n",
        "> ",
        "#model pairwise comparision (Tukey)",
        "> ",
        "mod.emm.s <-  emmeans(mod, c(\"Algae\",\"Time_post_infection\"))",
        "> ",
        "pairwise <- data.frame(pairs(mod.emm.s))",
        "> ",
        "pairwise$label <- ifelse(pairwise$p.value < 0.001, \"***\",ifelse(pairwise$p.value < 0.01, \"**\",ifelse(pairwise$p.value < 0.05, \"*\",\"\" )))",
        "> ",
        "pairwise <- pairwise %>%  separate(contrast, c(\"start\", \"end\"), \" - \")",
        "> ",
        "pairwise <- pairwise %>%  separate(start, c(\"Algae_1\", \"t.p.i_1\"),  sep=\"\\\\s+(?=\\\\S*$)\")",
        "> ",
        "pairwise <- pairwise %>%  separate(end, c(\"Algae_2\", \"t.p.i_2\"),  sep=\"\\\\s+(?=\\\\S*$)\")",
        "> ",
        "head(pairwise)",
        "> ",
        "write_csv(pairwise, \"1e_pairwise.csv\")",
        "> ",
        "result <- data.frame(mod.emm.s)",
        "> ",
        "summary <- data.frame(Algae=result$Algae)",
        "> ",
        "#Transform data (linkfunction)",
        "> ",
        "summary$Time_post_infection <- factor(result$Time_post_infection,levels= c(\"1\",\"2\",\"3\",\"6\",\"10\"))",
        "> ",
        "summary$mean<- exp(result$emmean)",
        "> ",
        "summary$down <- exp(result$lower.CL)",
        "> ",
        "summary$up <- exp(result$upper.CL)",
        "> ",
        "write_csv(pairwise, \"1e_summary.csv\")",
        "> ",
        "P1<-ggplot(data = summary) +",
        "+ ",
        "geom_bar(aes(x = Time_post_infection, y = mean, color = Algae, fill = Algae),stat = \"identity\",show.legend = FALSE)+ #,color= c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")",
        "+ ",
        "facet_wrap(~ Algae, nrow = 1)+",
        "+ ",
        "geom_errorbar(aes(x = Time_post_infection, group=Algae, y = mean, ymin=down, ymax=up), width=.5, show.legend = FALSE) +",
        "+ ",
        "  theme_classic() +",
        "+ ",
        "  theme(strip.background = element_blank(), strip.text = element_blank())+",
        "+ ",
        "scale_color_manual(breaks = c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"),",
        "+ ",
        "values=c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")) +",
        "+ ",
        "scale_fill_manual(breaks = c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"),",
        "+ ",
        "values=c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")) +",
        "+ ",
        "  labs(x = \"Time post infection (d)\", y = \"Algae per larvae\") +",
        "+ ",
        "scale_y_continuous(expand = c(0, 0), limits = c(0,6))",
        "> ",
        "plot(P1)",
        "> ",
        "ggsave(\"Figure 1e.pdf\",width=16,height=11,units=\"cm\")",
        "> ",
        "P1<-ggplot(data = summary) + ",
        "+ ",
        "  geom_bar(aes(x = Time_post_infection, y = mean, color = Algae, fill = Algae),stat = \"identity\",show.legend = FALSE)+ #,color= c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")",
        "+ ",
        "  facet_wrap(~ Algae, nrow = 1)+",
        "+ ",
        "  geom_errorbar(aes(x = Time_post_infection, group=Algae, y = mean, ymin=down, ymax=up), width=.5, show.legend = FALSE) +",
        "+ ",
        "  theme_classic() +",
        "+ ",
        "  theme(strip.background = element_blank(), strip.text = element_blank())+",
        "+ ",
        "  scale_color_manual(breaks = c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"),",
        "+ ",
        "                     values=c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")) +",
        "+ ",
        "  scale_fill_manual(breaks = c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"),",
        "+ ",
        "                     values=c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")) +",
        "+ ",
        "  labs(x = \"Time post infection (d)\", y = \"Algae per larvae\") +",
        "+ ",
        "  scale_y_continuous(expand = c(0, 0), limits = c(0,6)) ",
        "> ",
        "plot(P1)",
        "> ",
        "ggsave(\"Figure 1e.pdf\",width=16,height=11,units=\"cm\")",
        "> ",
        "result <- data.frame(mod.emm.s)",
        "> ",
        "summary <- data.frame(Algae=result$Algae)",
        "> ",
        "#Transform data (linkfunction)",
        "> ",
        "summary$Time_post_infection <- factor(result$Time_post_infection,levels= c(\"1\",\"2\",\"3\",\"6\",\"10\"))",
        "> ",
        "summary$mean<- exp(result$emmean)",
        "> ",
        "summary$down <- exp(result$lower.CL)",
        "> ",
        "summary$up <- exp(result$upper.CL)",
        "> ",
        "write_csv(pairwise, \"1e_summary.csv\")",
        "> ",
        "result <- data.frame(mod.emm.s)",
        "> ",
        "summary <- data.frame(Algae=result$Algae)",
        "> ",
        "#Transform data (linkfunction)",
        "> ",
        "summary$Time_post_infection <- factor(result$Time_post_infection,levels= c(\"1\",\"2\",\"3\",\"6\",\"10\"))",
        "> ",
        "summary$mean<- exp(result$emmean)",
        "> ",
        "summary$down <- exp(result$lower.CL)",
        "> ",
        "summary$up <- exp(result$upper.CL)",
        "> ",
        "head(summary)",
        "> ",
        "write_csv(pairwise, \"1e_summary.csv\")",
        "> ",
        "library(readxl)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(mgcv)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggsignif)",
        "> ",
        "library(readr)",
        "> ",
        "library(emmeans)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "dat <- data.frame(read_csv(\"1d+e_data.csv\"))",
        "> ",
        "head(dat)",
        "> ",
        "dat$Algae <- factor(dat$Algae, levels= c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"))",
        "> ",
        "dat$Well_ID <- factor(dat$Well_ID)",
        "> ",
        "dat$Time_post_infection <- facto(as.double(dat$Time_post_infection))",
        "Error in facto(as.double(dat$Time_post_infection)) : \n  could not find function \"facto\"\n",
        "> ",
        "library(readxl)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(mgcv)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggsignif)",
        "> ",
        "library(readr)",
        "> ",
        "library(emmeans)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "dat <- data.frame(read_csv(\"1d+e_data.csv\"))",
        "> ",
        "head(dat)",
        "> ",
        "dat$Algae <- factor(dat$Algae, levels= c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"))",
        "> ",
        "dat$Well_ID <- factor(dat$Well_ID)",
        "> ",
        "dat$Time_post_infection <- factor(as.double(dat$Time_post_infection))",
        "> ",
        "dat$Repeat.Date. <- factor(as.character(dat$Repeat.Date.))",
        "> ",
        "dat$infected <- ifelse(dat$Number.of.Symbionts>=1,1,0)",
        "> ",
        "head(dat)",
        "> ",
        "#model data",
        "> ",
        "mod <- gam(Number.of.Symbionts ~ Algae + Time_post_infection + s(Well_ID, bs=\"re\"),data=dat,family=nb())",
        "> ",
        "S <- summary(mod)$p.table",
        "> ",
        "S",
        "                        Estimate Std. Error    z value     Pr(>|z|)\n(Intercept)            2.2709388  0.2839641   7.997276 1.272021e-15\nAlgaeM. gaditana      -1.7196165  0.2858519  -6.015761 1.790433e-09\nAlgaeN. oculata       -3.7828161  0.3091895 -12.234621 2.030508e-34\nAlgaeC. velia         -1.3633748  0.2818657  -4.836966 1.318360e-06\nTime_post_infection2  -0.6728683  0.3202546  -2.101042 3.563729e-02\nTime_post_infection3  -1.1276807  0.3234755  -3.486139 4.900465e-04\nTime_post_infection6  -1.2798536  0.3239162",
        "  -3.951187 7.776463e-05\nTime_post_infection10 -1.9957867  0.3335057  -5.984266 2.173675e-09\n",
        "> ",
        "#model pairwise comparision (Tukey)",
        "> ",
        "mod.emm.s <-  emmeans(mod, c(\"Algae\",\"Time_post_infection\"))",
        "> ",
        "pairwise <- data.frame(pairs(mod.emm.s))",
        "> ",
        "pairwise$label <- ifelse(pairwise$p.value < 0.001, \"***\",ifelse(pairwise$p.value < 0.01, \"**\",ifelse(pairwise$p.value < 0.05, \"*\",\"\" )))",
        "> ",
        "pairwise <- pairwise %>%  separate(contrast, c(\"start\", \"end\"), \" - \")",
        "> ",
        "pairwise <- pairwise %>%  separate(start, c(\"Algae_1\", \"t.p.i_1\"),  sep=\"\\\\s+(?=\\\\S*$)\")",
        "> ",
        "pairwise <- pairwise %>%  separate(end, c(\"Algae_2\", \"t.p.i_2\"),  sep=\"\\\\s+(?=\\\\S*$)\")",
        "> ",
        "head(pairwise)",
        "> ",
        "write_csv(pairwise, \"1e_pairwise.csv\")",
        "> ",
        "result <- data.frame(mod.emm.s)",
        "> ",
        "summary <- data.frame(Algae=result$Algae)",
        "> ",
        "#Transform data (linkfunction)",
        "> ",
        "summary$Time_post_infection <- factor(result$Time_post_infection,levels= c(\"1\",\"2\",\"3\",\"6\",\"10\"))",
        "> ",
        "summary$mean<- exp(result$emmean)",
        "> ",
        "summary$down <- exp(result$lower.CL)",
        "> ",
        "summary$up <- exp(result$upper.CL)",
        "> ",
        "head(summary)",
        "> ",
        "write_csv(pairwise, \"1e_summary.csv\")",
        "> ",
        "P1<-ggplot(data = summary) + ",
        "+ ",
        "  geom_bar(aes(x = Time_post_infection, y = mean, color = Algae, fill = Algae),stat = \"identity\",show.legend = FALSE)+ #,color= c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")",
        "+ ",
        "  facet_wrap(~ Algae, nrow = 1)+",
        "+ ",
        "  geom_errorbar(aes(x = Time_post_infection, group=Algae, y = mean, ymin=down, ymax=up), width=.5, show.legend = FALSE) +",
        "+ ",
        "  theme_classic() +",
        "+ ",
        "  theme(strip.background = element_blank(), strip.text = element_blank())+",
        "+ ",
        "  scale_color_manual(breaks = c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"),",
        "+ ",
        "                     values=c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")) +",
        "+ ",
        "  scale_fill_manual(breaks = c(\"SSB01\", \"M. gaditana\", \"N. oculata\", \"C. velia\"),",
        "+ ",
        "                     values=c(\"#FF2500\",\"#E0D532\",\"#008D58\",\"#0067A2\")) +",
        "+ ",
        "  labs(x = \"Time post infection (d)\", y = \"Algae per larvae\") +",
        "+ ",
        "  scale_y_continuous(expand = c(0, 0), limits = c(0,6)) ",
        "> ",
        "plot(P1)",
        "> ",
        "ggsave(\"Figure 1e.pdf\",width=16,height=11,units=\"cm\")",
        "> ",
        "View(dat)",
        "> ",
        "cdata <- ddply(dat, c(\"Algae\", \"Time_post_infection\"), summarise,",
        "+ ",
        "               N    = length(change)",
        "+ ",
        ")",
        "Error in ddply(dat, c(\"Algae\", \"Time_post_infection\"), summarise, N = length(change)) : \n  could not find function \"ddply\"\n",
        "> ",
        "library(readxl)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(mgcv)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggsignif)",
        "> ",
        "library(readr)",
        "> ",
        "library(emmeans)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "cdata <- ddply(dat, c(\"Algae\", \"Time_post_infection\"), summarise,",
        "+ ",
        "               N    = length(change)",
        "+ ",
        ")",
        "Error in ddply(dat, c(\"Algae\", \"Time_post_infection\"), summarise, N = length(change)) : \n  could not find function \"ddply\"\n",
        "> ",
        "dat %>% group_by(\"Algae\") #%>% do(data.frame(p=p, stats=quantile(.$age, probs=p))",
        "> ",
        "dat %>% group_by(\"Algae\") %>% do(data.frame(n = count()))",
        "Error in UseMethod(\"count\") : \n  no applicable method for 'count' applied to an object of class \"NULL\"\n",
        "> ",
        "dat %>% group_by(\"Algae\") %>% do(data.frame(n = count(Time_post_infection)))",
        "Error in count(Time_post_infection) : \n  object 'Time_post_infection' not found\n",
        "> ",
        "dat %>% group_by(\"Algae\") %>% do(data.frame(n = count(\"Time_post_infection\")))",
        "Error in UseMethod(\"count\") : \n  no applicable method for 'count' applied to an object of class \"character\"\n",
        "> ",
        "dat %>% group_by(\"Algae\") %>% do(data.frame(n = count(\"Time_post_infection\")))",
        "Error in UseMethod(\"count\") : \n  no applicable method for 'count' applied to an object of class \"character\"\n",
        "> ",
        "dat %>% group_by(\"Algae\") %>% do(data.frame(n = count(\"Larvae\")))",
        "Error in UseMethod(\"count\") : \n  no applicable method for 'count' applied to an object of class \"character\"\n",
        "> ",
        "dat %>% group_by(\"Algae\") %>% do(data.frame(n = n(\"Larvae\")))",
        "Error in n(\"Larvae\") : unused argument (\"Larvae\")\n",
        "> ",
        "library(readxl)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(mgcv)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggsignif)",
        "> ",
        "library(readr)",
        "> ",
        "library(emmeans)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(plyr)",
        "> ",
        "library(readxl)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(mgcv)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggsignif)",
        "> ",
        "library(readr)",
        "> ",
        "library(emmeans)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(plyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "",
        "> ",
        "cdata <- ddply(dat, c(\"Algae\", \"Time_post_infection\"), summarise,",
        "+ ",
        "               N    = length(change)",
        "+ ",
        ")",
        "Error in eval(cols[[col]], .data, parent.frame()) : \n  object 'change' not found\n",
        "> ",
        "cdata <- ddply(dat, c(\"Algae\", \"Time_post_infection\"), summarise,",
        "+ ",
        "               N    = length(Repeat.Date.)",
        "+ ",
        ")",
        "> ",
        "cdata",
        "> ",
        "cdata <- ddply(dat, c(\"Algae\", \"Time_post_infection\", \"Well_ID\"), summarise,",
        "+ ",
        "               N    = length(Repeat.Date.)",
        "+ ",
        ")",
        "> ",
        "cdata",
        "> ",
        "cdata <- ddply(dat, c(\"Algae\", \"Time_post_infection\", \"Repeat.Date.\"), summarise,",
        "+ ",
        "               N    = length(\"Larvae\")",
        "+ ",
        ")",
        "> ",
        "n_Figure1e <- ddply(cdata, c(\"Algae\", \"Time_post_infection\"), summarise,",
        "+ ",
        "               N    = length(Repeat.Date.)",
        "+ ",
        ")",
        "> ",
        "n_Figure1e",
        "> ",
        "ndata <- ddply(dat, c(\"Algae\", \"Time_post_infection\", \"Repeat.Date.\"), summarise,",
        "+ ",
        "               N    = length(\"Larvae\")",
        "+ ",
        ")",
        "> ",
        "head(ndata)",
        "> ",
        "n_Figure1e <- ddply(ndata, c(\"Algae\", \"Time_post_infection\"), summarise,",
        "+ ",
        "               N    = length(Repeat.Date.)",
        "+ ",
        ")",
        "> ",
        "n_Figure1e",
        "> ",
        "ndata <- ddply(dat, c(\"Algae\", \"Time_post_infection\", \"Repeat.Date.\"), summarise,",
        "+ ",
        "               N    = length(\"Larvae\")",
        "+ ",
        ")",
        "> ",
        "head(ndata)",
        "> ",
        "n_Figure1e <- ddply(ndata, c(\"Algae\", \"Time_post_infection\"), summarise,",
        "+ ",
        "               N    = length(Repeat.Date.)",
        "+ ",
        ")",
        "> ",
        "n_Figure1e",
        "> ",
        "write_csv(n_Figure1e, \"1e_n.csv\")",
        "\nRestarting R session...\n\n",
        "Error: C stack usage  7953648 is too close to the limit\n",
        "Error saving session (options): R code execution error\n"
    ]
}